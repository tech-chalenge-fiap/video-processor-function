service: video-processor-function
useDotenv: true

frameworkVersion: "3.39"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  timeout: 60
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:*"
        - "sqs:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource:
        - "arn:aws:s3:::${env:CLOUD_STORAGE_BUCKET}/*"

package:
  individually: true
  patterns:
    - node_modules/ffmpeg-static/**

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    VideoProcessorQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: video-processor-queue
        VisibilityTimeout: 30
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - VideoProcessorDLQ
              - Arn
          maxReceiveCount: 3

    VideoProcessorDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: video-processor-dlq

functions:
  video-processor:
    handler: src/videoProcessor/videoProcessor.main
    package:
      patterns:
        - node_modules/ffmpeg-static/**
    environment:
      CLOUD_ACCESS_KEY: ${env:CLOUD_ACCESS_KEY}
      CLOUD_SECRET_KEY: ${env:CLOUD_SECRET_KEY}
      CLOUD_REGION: ${env:CLOUD_REGION}
      CLOUD_EMAIL: ${env:CLOUD_EMAIL}
      CLOUD_STORAGE_BUCKET: ${env:CLOUD_STORAGE_BUCKET}
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - VideoProcessorQueue
              - Arn
          batchSize: 1

  send-mail:
    handler: src/mailer/sendMail.main
    environment:
      CLOUD_ACCESS_KEY: ${env:CLOUD_ACCESS_KEY}
      CLOUD_SECRET_KEY: ${env:CLOUD_SECRET_KEY}
      CLOUD_REGION: ${env:CLOUD_REGION}
      CLOUD_EMAIL: ${env:CLOUD_EMAIL}
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - VideoProcessorDLQ
              - Arn
          batchSize: 1

